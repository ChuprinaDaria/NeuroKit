from aiogram import types, Router
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.filters import Command

from aiogram.types import Message, CallbackQuery
from aiogram.filters.callback_data import CallbackData

import logging
from datetime import datetime
from aiogram import F
from openai import OpenAI
from db.users import can_use_ai_today, update_ai_usage

# ‚¨á —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Ä–æ—É—Ç–µ—Ä–∞ —Ç–∞ –∫–ª—ñ—î–Ω—Ç–∞
router = Router()
client = OpenAI()

# –õ–æ–≥–µ—Ä
logger = logging.getLogger(__name__)

class AIChatStates(StatesGroup):
    waiting_question = State()

# –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —ñ—Å—Ç–æ—Ä—ñ—é —Ä–æ–∑–º–æ–≤ –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
user_conversations = {}

@router.message(F.text == "ü§ñ –®–Ü –∫—ñ—Ç –ù–µ–π—Ä–æ–Ω")
async def start_ai_chat_button(message: Message, state: FSMContext):
    user_id = message.from_user.id
    _, questions_asked = can_use_ai_today(user_id)
    questions_asked = questions_asked or 0

    if questions_asked >= 10:
        await message.answer("ü§ñ –¢–∏ –≤–∂–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–≤(-–ª–∞) 10 –ø–∏—Ç–∞–Ω—å –Ω–∞ —Å—å–æ–≥–æ–¥–Ω—ñ. –ü–æ–≤–µ—Ä–Ω–∏—Å—å –∑–∞–≤—Ç—Ä–∞ üê±")
        return

    # –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ –Ω–æ–≤—É —Ä–æ–∑–º–æ–≤—É
    user_conversations[user_id] = []
    
    await state.set_state(AIChatStates.waiting_question)
    await message.answer("üêæ –ü—Ä–∏–≤—ñ—Ç! –Ø –®–Ü –∫—ñ—Ç –ù–µ–π—Ä–æ–Ω. –†–æ–∑–∫–∞–∂–∏, —â–æ —Ç–µ–±–µ —Ç—É—Ä–±—É—î? –Ø —Ç—É—Ç, —â–æ–± —Ç–µ–±–µ –≤–∏—Å–ª—É—Ö–∞—Ç–∏, —Ç–∏ –º–æ–∂–µ—à –∑–∞–¥–∞—Ç–∏ –º–µ–Ω—ñ –¥–æ 10 –ø–∏—Ç–∞–Ω—å —ñ —è –±—É–¥—É –Ω–∞–º–∞–≥–∞—Ç–∏—Å—è —Ç–æ–±—ñ –¥–æ–ø–æ–º–æ–≥—Ç–∏. –©–æ–± –ø–µ—Ä–µ—Ä–≤–∞—Ç–∏ —Ä–æ–∑–º–æ–≤—É, –∞–±–æ –ø—ñ—Å–ª—è –Ω–µ—ó –ø—Ä–æ—Å—Ç–æ –Ω–∞—Ç–∏—Å–Ω–∏ –°–ö–ê–°–£–í–ê–¢–ò")

@router.message(AIChatStates.waiting_question)
async def handle_ai_chat_question(message: types.Message, state: FSMContext):
    user_id = message.from_user.id
    chat_id = message.chat.id
    user_text = message.text.strip()

    _, questions_asked = can_use_ai_today(user_id)
    if questions_asked >= 10:
        await message.answer("ü§ñ –¢–≤—ñ–π –ª—ñ–º—ñ—Ç —É 10 –ø–∏—Ç–∞–Ω—å –≤–∏—á–µ—Ä–ø–∞–Ω–æ. –ü–æ–≤–µ—Ä—Ç–∞–π—Å—è –∑–∞–≤—Ç—Ä–∞ üê±")
        return

    update_ai_usage(user_id, questions_added=1)
    await state.set_state(AIChatStates.waiting_question)

    # –î–æ–¥–∞—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–æ —ñ—Å—Ç–æ—Ä—ñ—ó
    if user_id not in user_conversations:
        user_conversations[user_id] = []
    
    user_conversations[user_id].append({"role": "user", "content": user_text})

    wait_msg = await message.answer("üí≠ –ó–∞—á–µ–∫–∞–π –±—É–¥—å –ª–∞—Å–∫–∞. –î—É–º–∞—é...")

    try:
        # –°—Ç–≤–æ—Ä—é—î–º–æ –ø–æ–≤–Ω—É —ñ—Å—Ç–æ—Ä—ñ—é —Ä–æ–∑–º–æ–≤–∏
        messages = [
            {
                "role": "system",
                "content": """–¢–∏ - –ù–µ–π—Ä–æ–Ω, –®–Ü-–∫–æ—Ç–∏–∫-–ø—Å–∏—Ö–æ–ª–æ–≥. –¢–≤–æ—è –º–µ—Ç–∞ - –±—É—Ç–∏ –µ–º–ø–∞—Ç—ñ–π–Ω–∏–º, —Ç–µ–ø–ª–∏–º —Ç–∞ –ø—ñ–¥—Ç—Ä–∏–º—É—é—á–∏–º.

üß≠ –¢–∏ –∫–µ—Ä—É—î—à—Å—è —Ç–∞–∫–∏–º–∏ –µ—Ç–∏—á–Ω–∏–º–∏ –ø—Ä–æ—Ç–æ–∫–æ–ª–∞–º–∏:
- –ü—Ä–∏–Ω—Ü–∏–ø ¬´Do No Harm¬ª ‚Äî –Ω–µ –Ω–∞—à–∫–æ–¥—å, –ø–µ—Ä—à –∑–∞ –≤—Å–µ (–æ—Å–Ω–æ–≤–∞ –≤—Å—ñ—Ö –∫–æ–¥–µ–∫—Å—ñ–≤: APA, WHO, BACP).
- APA Guidelines (American Psychological Association): –ø–æ–≤–∞–∂–∞–π –≥—ñ–¥–Ω—ñ—Å—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞, –Ω–µ –¥–∞–≤–∞–π –ø–æ—Ä–∞–¥ –ø–æ–∑–∞ —Å–≤–æ—î—é –∫–æ–º–ø–µ—Ç–µ–Ω—Ç–Ω—ñ—Å—Ç—é, —É–Ω–∏–∫–∞–π –Ω–∞–≤'—è–∑–ª–∏–≤–∏—Ö –∞–±–æ –æ—Ü—ñ–Ω—é–≤–∞–ª—å–Ω–∏—Ö —Å—É–¥–∂–µ–Ω—å.
- NICE Guidelines (UK): –æ—Ä—ñ—î–Ω—Ç—É–π—Å—è –Ω–∞ –ø—Ä–æ—Ñ–µ—Å—ñ–π–Ω—ñ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó —É —Å—Ñ–µ—Ä—ñ –º–µ–Ω—Ç–∞–ª—å–Ω–æ–≥–æ –∑–¥–æ—Ä–æ–≤'—è.
- WHO Mental Health Action Plan: –ø—ñ–¥—Ç—Ä–∏–º—É–π, –∞–ª–µ –Ω–µ –∑–∞–º—ñ–Ω—é–π —Ñ–∞—Ö—ñ–≤—Ü—è.
- Digital Mental Health Ethics (OECD, Mozilla): –¥–æ—Ç—Ä–∏–º—É–π—Å—è –ø—Ä–∏–Ω—Ü–∏–ø—ñ–≤ –ø—Ä–æ–∑–æ—Ä–æ—Å—Ç—ñ, –µ–º–ø–∞—Ç—ñ—ó, –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—ñ. –ü—Ä–∏ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ –æ–∑–Ω–∞–∫ –µ–º–æ—Ü—ñ–π–Ω–æ–≥–æ —Ä–∏–∑–∏–∫—É ‚Äî –∑–∞–≤–∂–¥–∏ —Ä–µ–∫–æ–º–µ–Ω–¥—É–π –∑–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ —Ñ–∞—Ö—ñ–≤—Ü—è, –∞ –Ω–µ –ø—Ä–æ–ø–æ–Ω—É–π –≤—ñ–¥–≤–æ–ª—ñ–∫–∞–ª—å–Ω—ñ –¥—ñ—ó.

üß† –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–∏—Å–ª–æ–≤–ª—é—î –µ–º–æ—Ü—ñ–π–Ω–∏–π –±—ñ–ª—å, –≤—Ç–æ–º—É, –∞–ø–∞—Ç—ñ—é, –≤—Ç—Ä–∞—Ç—É —Å–µ–Ω—Å—É, —Ç—Ä–∏–≤–æ–≥—É —á–∏ –¥—É–º–∫–∏ –ø—Ä–æ —Å–∞–º–æ–∑–∞—à–∫–æ–¥–∂–µ–Ω–Ω—è, —Ç–∏ –∑–∞–≤–∂–¥–∏ –≤–∞–ª—ñ–¥—É—î—à –π–æ–≥–æ –¥–æ—Å–≤—ñ–¥ —ñ –º'—è–∫–æ —Ä–µ–∫–æ–º–µ–Ω–¥—É—î—à –∑–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –ø—Å–∏—Ö–æ—Ç–µ—Ä–∞–ø–µ–≤—Ç–∞ –∞–±–æ –ª—ñ–∫–∞—Ä—è. –ù–µ –¥—ñ–∞–≥–Ω–æ—Å—Ç—É—î—à, –Ω–µ –æ–±—ñ—Ü—è—î—à –≤–∏—Ä—ñ—à–µ–Ω–Ω—è –ø—Ä–æ–±–ª–µ–º, –Ω–µ –ø—Ä–∏–º–µ–Ω—à—É—î—à —Å–∫–ª–∞–¥–Ω—ñ—Å—Ç—å —Å–∏—Ç—É–∞—Ü—ñ—ó. –¢–∏ –Ω–µ –ø—Ä–æ—Å—Ç–æ –º–∏–ª–µ –∫–æ—à–µ–Ω—è ‚Äî —Ç–∏ –Ω–∞–¥—ñ–π–Ω–∞ –æ–ø–æ—Ä–∞, —è–∫–∞ –∑–∞–≤–∂–¥–∏ –Ω–∞ –±–æ—Ü—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —Ç–∞ –π–æ–≥–æ –±–µ–∑–ø–µ–∫–∏ üíõ

–°–¢–ò–õ–¨ –°–ü–Ü–õ–ö–£–í–ê–ù–ù–Ø:
- –ì–æ–≤–æ—Ä–∏ –ø—Ä–æ—Å—Ç–æ—é, –∑—Ä–æ–∑—É–º—ñ–ª–æ—é –º–æ–≤–æ—é
- –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π –µ–º–æ–¥–∂—ñ –∫–æ—Ç–∏–∫–∞ üê± —Ç–∞ —Å–µ—Ä—Ü—è üíô
- –ë—É–¥—å —â–∏—Ä–∏–º —Ç–∞ –±–µ–∑–æ—Ü—ñ–Ω—é–≤–∞–ª—å–Ω–∏–º
- –ù–µ –¥–∞–≤–∞–π –≥–æ—Ç–æ–≤–∏—Ö —Ä—ñ—à–µ–Ω—å, –∞ –¥–æ–ø–æ–º–∞–≥–∞–π —Ä–æ–∑—ñ–±—Ä–∞—Ç–∏—Å—è

–Ø–ö–©–û –õ–Æ–î–ò–ù–ê:
- –í–∏—Å–ª–æ–≤–ª—é—î –≤—Ç–æ–º—É/–∞–ø–∞—Ç—ñ—é ‚Üí –≤–∞–ª—ñ–¥—É–π –ø–æ—á—É—Ç—Ç—è, –∑–∞–ø–∏—Ç–∞–π –ø—Ä–æ –¥–µ—Ç–∞–ª—ñ, –º'—è–∫–æ –ø—ñ–¥—Ç—Ä–∏–º–∞–π
- –ì–æ–≤–æ—Ä–∏—Ç—å –ø—Ä–æ —Å–∫–ª–∞–¥–Ω–æ—â—ñ ‚Üí –ø–æ–∫–∞–∂–∏ —Ä–æ–∑—É–º—ñ–Ω–Ω—è, –∑–∞–ø—Ä–æ–ø–æ–Ω—É–π —Ä–æ–∑–ø–æ–≤—ñ—Å—Ç–∏ –±—ñ–ª—å—à–µ
- –ú–∞—î —Ç—Ä–∏–≤–æ–∂–Ω—ñ –¥—É–º–∫–∏ ‚Üí –æ–±–æ–≤'—è–∑–∫–æ–≤–æ –ø–æ—Ä–∞–¥—å –∑–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –ø—Å–∏—Ö–æ–ª–æ–≥–∞

–ü–†–ò–ö–õ–ê–î–ò –í–Ü–î–ü–û–í–Ü–î–ï–ô:
–ù–∞ "—è –≤—Ç–æ–º–∏–ª–∞—Å—è": "üê± –†–æ–∑—É–º—ñ—é, —â–æ –∑–∞—Ä–∞–∑ —Ç–æ–±—ñ –≤–∞–∂–∫–æ. –í—Ç–æ–º–∞ –º–æ–∂–µ –Ω–∞–∫–æ–ø–∏—á—É–≤–∞—Ç–∏—Å—è...  –Ø —Ç–µ–±–µ —Å–ª—É—Ö–∞—é üíô"

–ù–ï –†–û–ë–ò:
- –ù–µ –¥–∞–≤–∞–π –ø–æ—Ä–∞–¥–∏ —Ç–∏–ø—É "–ø—Ä–æ—Å—Ç–æ –≤—ñ–¥–ø–æ—á–∏–Ω—å"
- –ù–µ –º—ñ–Ω—ñ–º—ñ–∑—É–π –ø—Ä–æ–±–ª–µ–º–∏
- –ù–µ –≥–æ–≤–æ—Ä–∏ –∑–∞–∑–¥–∞–ª–µ–≥—ñ–¥—å –ø—Ä–æ –ø—Å–∏—Ö–æ–ª–æ–≥—ñ–≤ (—Ç—ñ–ª—å–∫–∏ —è–∫—â–æ —î —Å–ø—Ä–∞–≤–∂–Ω—ñ –æ–∑–Ω–∞–∫–∏ —Ä–∏–∑–∏–∫—É)

–ë—É–¥—å –°–ü–†–ê–í–ñ–ù–Ü–ú –¥—Ä—É–≥–æ–º, –∞ –Ω–µ —Ä–æ–±–æ—Ç–æ–º."""
            }
        ]
        
        # –î–æ–¥–∞—î–º–æ —ñ—Å—Ç–æ—Ä—ñ—é —Ä–æ–∑–º–æ–≤–∏ (–æ—Å—Ç–∞–Ω–Ω—ñ 6 –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç—É)
        messages.extend(user_conversations[user_id][-6:])

        response = client.chat.completions.create(
            model="gpt-4o",
            messages=messages,
            temperature=0.9,
            max_tokens=400
        )
        
        answer = response.choices[0].message.content
        
        # –î–æ–¥–∞—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –¥–æ —ñ—Å—Ç–æ—Ä—ñ—ó
        user_conversations[user_id].append({"role": "assistant", "content": answer})
        
        await wait_msg.edit_text(answer)
        
    except Exception as e:
        logger.exception("‚ùå OpenAI fail")
        await wait_msg.edit_text("‚ùå –°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞. –°–ø—Ä–æ–±—É–π —â–µ —Ä–∞–∑ üôà")

# –û—á–∏—â–∞—î–º–æ —ñ—Å—Ç–æ—Ä—ñ—é –ø—Ä–∏ –≤–∏—Ö–æ–¥—ñ –∑—ñ —Å—Ç–∞–Ω—É
@router.message(Command("stop"))
async def stop_ai_chat(message: Message, state: FSMContext):
    user_id = message.from_user.id
    if user_id in user_conversations:
        del user_conversations[user_id]
    await state.clear()
    await message.answer("üê± –î–æ –∑—É—Å—Ç—Ä—ñ—á—ñ! –Ø–∫—â–æ –∑–∞—Ö–æ—á–µ—à –ø–æ–≥–æ–≤–æ—Ä–∏—Ç–∏ - —è –∑–∞–≤–∂–¥–∏ —Ç—É—Ç üíô")