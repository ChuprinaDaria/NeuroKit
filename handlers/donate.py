# donate.py
from aiogram import Router, F
from aiogram.types import CallbackQuery, Message, InlineKeyboardButton, InlineKeyboardMarkup
import logging

logger = logging.getLogger(__name__)
router = Router()

TEST_MENU = 2  # –∑–∞–ª–∏—à–∞—î–º–æ –ø–æ–∫–∏ —Ç–∞–∫, –∞–±–æ –∑–∞–º—ñ–Ω–∏–º–æ –Ω–∞ StatesGroup —è–∫—â–æ –±—É–¥–µ FSM


# ‚úÖ –ú–µ–Ω—é –¥–æ–Ω–∞—Ç—É (–≤–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è –∫–Ω–æ–ø–∫–æ—é)
@router.message(F.text == "üí∏ –ó–∞–¥–æ–Ω–∞—Ç–∏—Ç–∏")
async def donate_from_main_menu(message: Message):
    try:
        keyboard = [
            [InlineKeyboardButton(text="25 –≥—Ä–Ω ‚Äî –º–∞–ª–µ–Ω—å–∫–µ –ø–µ—á–µ–Ω—å–∫–æ", callback_data="donate_25")],
            [InlineKeyboardButton(text="50 –≥—Ä–Ω ‚Äî —Å–∞—Ä–¥–µ–ª—å–∫–∞ –¥–ª—è –∫–æ—Ç–∏–∫–∞", callback_data="donate_50")],
            [InlineKeyboardButton(text="150 –≥—Ä–Ω ‚Äî –ª—ñ–∂–µ—á–∫–æ –¥–ª—è –≤—ñ–¥–ø–æ—á–∏–Ω–∫—É", callback_data="donate_150")],
            [InlineKeyboardButton(text="‚¨Ö –ù–∞–∑–∞–¥", callback_data="back_to_main")]
        ]

        await message.answer(
            "üê± –¶–µ–π –±–æ—Ç –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–∏–π. –ê–ª–µ —è–∫—â–æ –≤—ñ–Ω –±—É–≤ –∫–æ—Ä–∏—Å–Ω–∏–π ‚Äî –º–æ–∂–µ—à –ø—Ä–∏–≥–æ—Å—Ç–∏—Ç–∏ –º–µ–Ω–µ –∫–æ—Ç—è—á–∏–º –ø–µ—á–∏–≤–æ–º :)\n\n"
            "–û–±–µ—Ä—ñ—Ç—å —Å—É–º—É:",
            reply_markup=InlineKeyboardMarkup(inline_keyboard=keyboard)
        )

    except Exception as e:
        logger.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –≤ donate_from_main_menu: {e}")
        await message.answer("üêæ –°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—ñ–¥–∫—Ä–∏—Ç—Ç—ñ –º–µ–Ω—é –¥–æ–Ω–∞—Ç—É.")


# ‚úÖ –û–±—Ä–æ–±–∫–∞ –≤–∏–±–æ—Ä—É —Å—É–º–∏
@router.callback_query(F.data.startswith("donate_"))
async def process_donate(callback: CallbackQuery):
    try:
        await callback.answer()
        amount = callback.data.replace("donate_", "")

        payment_links = {
            "25": "https://buy.stripe.com/dR63cJ5c09nVaQw6or",
            "50": "https://buy.stripe.com/dR63cJ5c09nVaQw6or",
            "150": "https://buy.stripe.com/dR63cJ5c09nVaQw6or"
        }

        gift_texts = {
            "25": "–∫–æ—Ä–æ–±–æ—á–∫—É —Å–º–∞–∫–æ–ª–∏–∫—ñ–≤",
            "50": "—Å–∞—Ä–¥–µ–ª—å–∫–∏ —ñ –ª–µ–∂–∞—á–æ–∫",
            "150": "–º—ñ—Å—è—á–Ω–∏–π –∑–∞–ø–∞—Å –∫–æ—Ä–º—É"
        }

        payment_link = payment_links.get(amount, payment_links["25"])
        gift_text = gift_texts.get(amount, "–ø—Ä–∏—î–º–Ω–∏–π –ø–æ–¥–∞—Ä—É–Ω–æ–∫ –¥–ª—è –∫–æ—Ç–∏–∫–∞")

        keyboard = [
            [InlineKeyboardButton(text="üí≥ –ü—ñ–¥—Ç—Ä–∏–º–∞—Ç–∏ –∫–æ—Ç–∏–∫–∞", url=payment_link)],
            [InlineKeyboardButton(text="üß™ –î–æ —Ç–µ—Å—Ç—ñ–≤", callback_data="back_to_tests")]
        ]

        await callback.message.answer(
            f"üê± –ú—É—Ä—Ä—Ä! –î—è–∫—É—é, —â–æ –≤–∏—Ä—ñ—à–∏–ª–∏ –ø–æ–¥–∞—Ä—É–≤–∞—Ç–∏ –∫–æ—Ç–∏–∫—É {gift_text}!\n\n"
            f"–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ, —â–æ–± –∑–¥—ñ–π—Å–Ω–∏—Ç–∏ –¥–æ–Ω–∞—Ç —á–µ—Ä–µ–∑ –±–µ–∑–ø–µ—á–Ω—É —Å–∏—Å—Ç–µ–º—É –æ–ø–ª–∞—Ç–∏.",
            reply_markup=InlineKeyboardMarkup(inline_keyboard=keyboard)
        )

    except Exception as e:
        logger.error(f"–ü–æ–º–∏–ª–∫–∞ –æ–±—Ä–æ–±–∫–∏ –¥–æ–Ω–∞—Ç—É: {e}")
        import traceback
        logger.error(traceback.format_exc())
        await callback.message.answer("üê± –°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–±—Ä–æ–±—Ü—ñ –¥–æ–Ω–∞—Ç—É. –°–ø—Ä–æ–±—É–π –ø—ñ–∑–Ω—ñ—à–µ.")
