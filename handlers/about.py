import logging
from aiogram import Router
from aiogram.types import Message
from aiogram.filters import Filter
from aiogram import F



logger = logging.getLogger(__name__)
router = Router()

# üåü –ü—Ä–æ –ø—Ä–æ—î–∫—Ç
@router.message(F.text == "üêæ –ü—Ä–æ –ø—Ä–æ—î–∫—Ç")


async def about_project(message: Message):
    try:
        await message.answer(
            "üê± <b>–ü—Ä–æ –ø—Ä–æ—î–∫—Ç \"–ù–µ–π—Ä–æ–≤—ñ–¥–º—ñ–Ω–Ω—ñ –∫–æ—Ç–∏–∫–∏\"</b>\n\n"
            "–¶–µ–π –±–æ—Ç —Å—Ç–≤–æ—Ä–µ–Ω–æ –∑ —Ç—É—Ä–±–æ—Ç–æ—é –Ω–µ–π—Ä–æ–≤—ñ–¥–º—ñ–Ω–Ω–æ—é –ª—é–¥–∏–Ω–æ—é ‚Äî –¥–ª—è —Ç–∞–∫–∏—Ö —Å–∞–º–∏—Ö, —è–∫ —Ç–∏. "
            "–ù–∞—à–∞ –º–µ—Ç–∞ ‚Äî –ø—ñ–¥—Ç—Ä–∏–º–∞—Ç–∏, —Å–∫–µ—Ä—É–≤–∞—Ç–∏ –π –¥–∞—Ç–∏ –∑–º–æ–≥—É –∫—Ä–∞—â–µ –∑—Ä–æ–∑—É–º—ñ—Ç–∏ —Å–µ–±–µ —É –±–µ–∑–ø–µ—á–Ω–æ–º—É –ø—Ä–æ—Å—Ç–æ—Ä—ñ.\n\n"
            "üìã –£ –±–æ—Ç—ñ —Ç–∏ –º–æ–∂–µ—à –ø—Ä–æ–π—Ç–∏ –ø—Å–∏—Ö–æ–ª–æ–≥—ñ—á–Ω—ñ —Ç–µ—Å—Ç–∏, —è–∫—ñ –¥–æ–ø–æ–º–∞–≥–∞—é—Ç—å —É—Å–≤—ñ–¥–æ–º–∏—Ç–∏ —Å–≤—ñ–π —Å—Ç–∞–Ω. "
            "–Ñ —ñ–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü—ñ—ó —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤, PDF-–∑–≤—ñ—Ç–∏ —Ç–∞ –Ω–∞–≤—ñ—Ç—å –®–Ü-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç ¬´–ö—ñ—Ç –ù–µ–π—Ä–æ–Ω¬ª, —è–∫–∏–π –≤—ñ–¥–ø–æ–≤—ñ—Å—Ç—å –µ–º–ø–∞—Ç–∏—á–Ω–æ —ñ –∑ –æ–ø–æ—Ä–æ—é –Ω–∞ –¥–æ–∫–∞–∑–æ–≤—É –ø—Å–∏—Ö–æ–ª–æ–≥—ñ—é.\n\n"
            "ü§ù –ú–∏ –Ω–µ —Å—Ç–∞–≤–∏–º–æ –¥—ñ–∞–≥–Ω–æ–∑—ñ–≤ —ñ –Ω–µ –∑–∞–º—ñ–Ω—é—î–º–æ —Å–ø–µ—Ü—ñ–∞–ª—ñ—Å—Ç—ñ–≤ ‚Äî –∞–ª–µ –º–æ–∂–µ–º–æ —Å—Ç–∞—Ç–∏ –ø–µ—Ä—à–∏–º –∫—Ä–æ–∫–æ–º –Ω–∞ —à–ª—è—Ö—É –¥–æ —Å–µ–±–µ.\n\n"
            "üîß –ü—Ä–æ—î–∫—Ç –ø–æ—Å—Ç—ñ–π–Ω–æ –æ–Ω–æ–≤–ª—é—î—Ç—å—Å—è: –¥–æ–¥–∞—î–º–æ –Ω–æ–≤—ñ —Ç–µ—Å—Ç–∏, –º–æ–∂–ª–∏–≤–æ—Å—Ç—ñ, –ø–æ–∫—Ä–∞—â—É—î–º–æ UX —ñ –ø–ª–∞–Ω—É—î–º–æ –±—ñ–ª—å—à–µ —Ñ—É–Ω–∫—Ü—ñ–π –¥–ª—è —Å–∞–º–æ–ø—ñ–¥—Ç—Ä–∏–º–∫–∏.\n\n"
            "üíå –Ø–∫—â–æ —Ö–æ—á–µ—à —â–æ—Å—å –∑–∞–ø—Ä–æ–ø–æ–Ω—É–≤–∞—Ç–∏ –∞–±–æ –ø–æ–¥—ñ–ª–∏—Ç–∏—Å—å –¥—É–º–∫–æ—é ‚Äî –Ω–∞–ø–∏—à–∏ —á–µ—Ä–µ–∑ /feedback. "
            "–ê–Ω–æ–Ω—ñ–º–Ω–æ, –±–µ–∑ –æ—Å—É–¥—É, –ø—Ä–æ—Å—Ç–æ –ø–æ-–ª—é–¥—Å—å–∫–∏.\n\n"
            "üêæ <i>–¢—É—Ç –±–µ–∑–ø–µ—á–Ω–æ. –¢—É—Ç –ø—Ä–æ —Ç–µ–±–µ. –Ü —Ç—É—Ç –∑–∞–≤–∂–¥–∏ —Ä–∞–¥—ñ —Ç–≤–æ—ó–π –ø—Ä–∏—Å—É—Ç–Ω–æ—Å—Ç—ñ.</i>",
            parse_mode="HTML"
        )
    except Exception as e:
        logger.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –≤ about_project: {e}")


# üå™Ô∏è –û–±—Ä–æ–±–∫–∞ –±—É–¥—å-—è–∫–∏—Ö –ø–æ–º–∏–ª–æ–∫
async def error_handler(event, exception):
    logger.error(f"üí• –°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞: {exception}")

    try:
        if isinstance(event, Message):
            await event.answer(
                "üê± –û–π-–æ–π, —Å—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞. –ù–∞–ø–∏—à–∏ /start, —â–æ–± –ø–æ—á–∞—Ç–∏ —Å–ø–æ—á–∞—Ç–∫—É –∞–±–æ –¥–∞–π –∫–æ—Ç—É —Ç—Ä–æ—Ö–∏ —á–∞—Å—É üêæ"
            )
    except Exception as e:
        logger.error(f"‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É: {e}")

# üì¶ –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è
def register_about_handlers(dp):
    dp.include_router(router)
